1️⃣ List all objects in an S3 bucket

```
import boto3
s3 = boto3.client('s3')
paginator = s3.get_paginator('list_objects_v2')

for page in paginator.paginate(Bucket="www.learnaws.org", PaginationConfig={"PageSize":10}):
    print([c["Key"] for c in page["Contents"]])
```

How it works:
	•	Creates an S3 client (s3 = boto3.client('s3')).
	•	Gets a paginator for list_objects_v2 (used to list objects in a bucket).
	•	Loops through pages, specifying PaginationConfig={"PageSize":10}, meaning each page will contain at most 10 objects.
	•	Extracts object keys (c["Key"] refers to object names).
	•	Prints the list of object names.

    
2️⃣ List all IAM roles

```
import boto3

iam = boto3.client('iam')
paginator = iam.get_paginator('list_roles')

for page in paginator.paginate():
    print([c["RoleName"] for c in page["Roles"]])
```

How it works:
	•	Creates an IAM client.
	•	Gets a paginator for list_roles (lists all IAM roles).
	•	Loops through pages, extracting RoleName for each role and printing them.


3️⃣ List all EC2 instances

```
import boto3

ec2 = boto3.client('ec2')
paginator = ec2.get_paginator('describe_instances')

for page in paginator.paginate():
    print([c["InstanceId"] for c in page["Reservations"][0]["Instances"]])
```

How it works:
	•	Creates an EC2 client.
	•	Gets a paginator for describe_instances (retrieves instance details).
	•	Loops through pages, extracting InstanceId from the response.
	•	Note: Reservations[0] assumes at least one reservation exists, which can cause errors if no instances are found.

